import Head from 'next/head'
import bot from 'assets/bot.svg'
import user from 'assets/user_2.png'
import btnSend from 'assets/btnSend.svg'
import { v4 as uuid } from 'uuid';
import styles from '@/styles/Home.module.css'
import Image from 'next/image'
import { useState } from 'react';

const prependString = 'Rewrite this message by breaking down the ideas into separate sentences in bullet point format: ';
interface ChatStripe {
  isAi: boolean
  value: string
  uniqueId?: string
}

export default function Home() {
  const [prompt, setPrompt]  = useState<string>(prependString)
  const [conversation, setConversation] = useState<ChatStripe[]>([])

  const handleSubmit = async (e: any) => {
    e.preventDefault()
    const userPrompt: ChatStripe = {
      isAi: false,
      value: prompt,
      uniqueId: uuid()
    }

    try {
      const res = await fetch('/api/handlerChatGPT', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          prompt
        })
      });
      
      if( res.ok ) {
        const data = await res.json()
        const parsedData = data.bot.trim();
        const botResponse: ChatStripe = {
          isAi: true,
          value: parsedData,
          uniqueId: uuid()
        }
        setPrompt("")
        setConversation(conversation.concat(userPrompt, botResponse))
        console.log(conversation)
      }
      else {
        const error = await res.text()
        console.log(error) 
      }
    } catch( error ) {
      console.log(error) 
    }
  }

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <div className='container'>
        <div>
          { conversation.map( (data: ChatStripe, key) => (
            <div className={`wrapper ${data.isAi && 'ai'}`} key={key}>
              <div className="chat">
                  <div className="profile">
                      <Image 
                          src={data.isAi ? bot : user} 
                          alt={data.isAi ? 'bot' : 'user'}
                          width={50}
                          height={50}
                      />
                  </div>
                  <div className="message" id={data.uniqueId}>{data.value}</div>
              </div>
          </div>
        ))}
        </div>
          <form onSubmit={handleSubmit}>
            <textarea 
              name="prompt" 
              value={prompt}
              cols={3}
              rows={3}
              onChange={(e) => {
              setPrompt(e.target.value)
            }}
              style={{minHeight: 150, minWidth: 450}}
            ></textarea>  
              <button type="submit">
                <Image src={btnSend} alt="send" />
              </button>
          </form>
        </div>
      </main>
    </>
  )
}
